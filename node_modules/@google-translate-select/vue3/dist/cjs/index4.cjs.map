{"version":3,"file":"index4.cjs","sources":["../../src/utils/install.ts"],"sourcesContent":["import { noop } from '@google-translate-select/utils'\n\nimport type { App, AppContext, Directive, Plugin } from 'vue'\n\nexport type SFCWithInstall<T> = T & Plugin\n\nexport type SFCInstallWithContext<T> = SFCWithInstall<T> & {\n  _context: AppContext | null\n}\n\nexport const withInstall = <T, E extends Record<string, any>>(\n  main: T,\n  extra?: E\n) => {\n  ;(main as SFCWithInstall<T>).install = (app: any): void => {\n    for (const comp of [main, ...Object.values(extra ?? {})]) {\n      app.component(comp.name, comp)\n    }\n  }\n\n  if (extra) {\n    for (const [key, comp] of Object.entries(extra)) {\n      ;(main as any)[key] = comp\n    }\n  }\n  return main as SFCWithInstall<T> & E\n}\n\nexport const withInstallFunction = <T>(fn: T, name: string) => {\n  ;(fn as SFCWithInstall<T>).install = (app: App) => {\n    ;(fn as SFCInstallWithContext<T>)._context = app._context\n    app.config.globalProperties[name] = fn\n  }\n\n  return fn as SFCInstallWithContext<T>\n}\n\nexport const withInstallDirective = <T extends Directive>(\n  directive: T,\n  name: string\n) => {\n  ;(directive as SFCWithInstall<T>).install = (app: App): void => {\n    app.directive(name, directive)\n  }\n\n  return directive as SFCWithInstall<T>\n}\n\nexport const withNoopInstall = <T>(component: T) => {\n  ;(component as SFCWithInstall<T>).install = noop\n\n  return component as SFCWithInstall<T>\n}\n"],"names":["withInstall","main","extra","app","comp","key"],"mappings":"gFAUa,MAAAA,EAAc,CACzBC,EACAC,IACG,CAOH,GANED,EAA2B,QAAWE,GAAmB,CAC9C,UAAAC,IAAQ,CAACH,EAAM,GAAG,OAAO,OAAOC,GAAS,CAAE,CAAA,CAAC,EACjDC,EAAA,UAAUC,EAAK,KAAMA,CAAI,CAC/B,EAGEF,EACF,SAAW,CAACG,EAAKD,CAAI,IAAK,OAAO,QAAQF,CAAK,EAC1CD,EAAaI,CAAG,EAAID,EAGnB,OAAAH,CACT"}