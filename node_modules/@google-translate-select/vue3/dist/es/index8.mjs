import { COMPONENT_PREFIX as y, GOOGLE_TRANSLATE_ORIGINAL_DOM_ID as N, PKG_CAMELCASE_NAME as k } from "./index7.mjs";
var G = (e) => typeof e == "string", B = typeof window > "u", E = !B, V = () => {
}, x = (e) => Boolean(e()), O = class extends Error {
  constructor(e) {
    super(e), this.name = `${k}Error`;
  }
};
function b(e, a) {
  throw new O(`[${e}] ${a}`);
}
function D(e, a) {
  if (E) {
    let r = G(e) ? new O(`[${e}] ${a}`) : e;
    console.warn(r);
  }
}
function q(e, a) {
  let { pageLanguage: r, autoDisplay: t = !1 } = e;
  r || b("createGoogleTranslateJsonpCallback", "pageLanguage is required.");
  function n() {
    window.google && window.google.translate ? (new window.google.translate.TranslateElement({ pageLanguage: r, autoDisplay: t }, N), a()) : b("googleTranslateElementInit", "please check window.google & window.google.translate");
  }
  return window.googleTranslateElementInit = n, { jsonpCallbackName: "googleTranslateElementInit" };
}
function U(e, a = "change") {
  try {
    if (document.createEvent) {
      let r = document.createEvent("HTMLEvents");
      r.initEvent(a, !0, !0), e.dispatchEvent(r);
    } else {
      let r = document.createEventObject();
      e.fireEvent(`on${a}`, r);
    }
  } catch (r) {
    D("GoogleTranslateFireEvent", `${r}`);
  }
}
var j = E ? window : void 0, L = E ? window.document : void 0;
function W(e) {
  let a = document.cookie.split("; ");
  for (let r = 0; r < a.length; r++) {
    let t = a[r].split("=");
    if (t[0] == e)
      return unescape(t[1]);
  }
}
function Z(e, a, r = {}) {
  let { window: t = j, ...n } = r, o, c = x(() => t && "MutationObserver" in t);
  return { isSupported: c, start: () => {
    c && t && e && (o = new MutationObserver(a), o.observe(e, n));
  }, stop: () => {
    o && (o.disconnect(), o = void 0);
  } };
}
function z(e, a = V, r = {}) {
  let { immediate: t = !0, type: n = "text/javascript", async: o, crossOrigin: c, defer: m = !0, document: l = L, attrs: S = {} } = r, p = null, g = null, I = (u) => new Promise(($, f) => {
    let w = (i) => (p = i, $(i), i);
    if (!l) {
      $(!1);
      return;
    }
    let h = !1, s = l.querySelector(`script[src="${e}"]`);
    s ? s.hasAttribute("data-loaded") && w(s) : (s = l.createElement("script"), s.type = n, s.src = e, s.defer = m, o && (s.async = o), c && (s.crossOrigin = c), Object.entries(S).forEach(([i, M]) => s == null ? void 0 : s.setAttribute(i, M)), h = !0), s.addEventListener("error", (i) => f(i)), s.addEventListener("abort", (i) => f(i)), s.addEventListener("load", () => {
      s.setAttribute("data-loaded", "true"), a(s), w(s);
    }), h && (s = l.head.appendChild(s)), u || w(s);
  }), v = (u = !0) => (g || (g = I(u)), g), _ = () => {
    if (!l)
      return;
    g = null, p && (p = null);
    let u = l.querySelector(`script[src="${e}"]`);
    u && l.head.removeChild(u);
  };
  return t && v(), { scriptTag: p, load: v, unload: _ };
}
function K() {
  let e = document.getElementsByClassName("VIpgJd-ZVi9od-aZ2wEe-wOHMyf")[0];
  e && (e.style.display = "none");
}
var F = 0;
function X(e, a = {}) {
  let r = !1, { immediate: t = !0, id: n = `google-translate-select_${++F}`, document: o = L } = a, c = () => {
    if (!o)
      return;
    let l = o.getElementById(n) || o.createElement("style");
    l.type = "text/css", l.id = n, l.innerText = e, o.head.appendChild(l), l.onload = () => {
      r = !0;
    };
  }, m = () => {
    !o || !r || (o.head.removeChild(o.getElementById(n)), r = !1);
  };
  return t && c(), { id: n, css: e, isLoaded: r, load: c, unload: m };
}
var A = (e) => {
  let a = /* @__PURE__ */ Object.create(null);
  return (r) => a[r] || (a[r] = e(r));
}, H = /-(\w)/g, T = A((e) => e.replace(H, (a, r) => r ? r.toUpperCase() : "")), J = A((e) => e.charAt(0).toUpperCase() + e.slice(1)), C = (e) => J(e), P = "is-", d = (e, a, r, t, n) => {
  let o = `${e}-${a}`;
  return r && (o += `-${r}`), t && (o += `__${t}`), n && (o += `--${n}`), o;
}, Q = (e) => {
  let a = y, r = `${C(T(y))}${C(T(e))}`;
  return { namespace: a, n: r, b: (t = "") => d(a, e, t, "", ""), e: (t) => t ? d(a, e, "", t, "") : "", m: (t) => t ? d(a, e, "", "", t) : "", be: (t, n) => t && n ? d(a, e, t, n, "") : "", em: (t, n) => t && n ? d(a, e, "", t, n) : "", bm: (t, n) => t && n ? d(a, e, t, "", n) : "", bem: (t, n, o) => t && n && o ? d(a, e, t, n, o) : "", is: (t, ...n) => {
    let o = n.length >= 1 ? n[0] : !0;
    return t && o ? `${P}${t}` : "";
  }, cssVar: (t) => {
    let n = {};
    for (let o in t)
      t[o] && (n[`--${a}-${o}`] = t[o]);
    return n;
  }, cssVarName: (t) => `--${a}-${t}`, cssVarBlock: (t) => {
    let n = {};
    for (let o in t)
      t[o] && (n[`--${a}-${e}-${o}`] = t[o]);
    return n;
  }, cssVarBlockName: (t) => `--${a}-${e}-${t}` };
};
export {
  U as GoogleTranslateFireEvent,
  T as camelize,
  C as capitalize,
  q as createGoogleTranslateJsonpCallback,
  Q as createNamespace,
  z as createScriptTag,
  X as createStyleTag,
  L as defaultDocument,
  j as defaultWindow,
  W as getCookie,
  E as isClient,
  B as isServer,
  G as isString,
  x as isSupport,
  V as noop,
  K as removeIcon,
  b as throwError,
  D as throwWarn,
  Z as useMutationObserver
};
//# sourceMappingURL=index8.mjs.map
